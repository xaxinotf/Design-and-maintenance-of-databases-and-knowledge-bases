CREATE TYPE "gender" AS ENUM (
  'male',
  'female',
  'non_binary'
);

CREATE TYPE "animation_type" AS ENUM (
  'computer',
  'drawn',
  'puppet'
);

CREATE TYPE "currency" AS ENUM (
  'UAH',
  'USD',
  'EUR',
  'GBP'
);

CREATE TYPE "parent_relation" AS ENUM (
  'father',
  'mother'
);

CREATE TABLE "studio" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar(200) UNIQUE NOT NULL,
  "address" varchar(300) NOT NULL
);

CREATE TABLE "president" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "full_name" varchar(150) NOT NULL,
  "start_date" date NOT NULL,
  "end_date" date,
  "studio_id" int UNIQUE NOT NULL
);

CREATE TABLE "studio_unit" (
  "studio_id" int NOT NULL,
  "unit_name" varchar(200) NOT NULL,
  "employee_count" int NOT NULL DEFAULT 0,
  PRIMARY KEY ("studio_id", "unit_name")
);

CREATE TABLE "movie" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" varchar(200) NOT NULL,
  "duration_min" int NOT NULL,
  "release_year" int NOT NULL,
  "budget" numeric(14,2) NOT NULL DEFAULT 0,
  "owner_studio_id" int NOT NULL
);

CREATE TABLE "animation_movie" (
  "movie_id" int PRIMARY KEY,
  "type" animation_type NOT NULL
);

CREATE TABLE "feature_movie" (
  "movie_id" int PRIMARY KEY
);

CREATE TABLE "documentary_movie" (
  "movie_id" int PRIMARY KEY,
  "topic" varchar(300) NOT NULL
);

CREATE TABLE "movie_coproducer" (
  "movie_id" int NOT NULL,
  "studio_id" int NOT NULL,
  "contribution_pct" numeric(5,2),
  "role_description" varchar(200),
  PRIMARY KEY ("movie_id", "studio_id")
);

CREATE TABLE "actor" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "full_name" varchar(150) NOT NULL,
  "age_years" smallint NOT NULL,
  "gender" gender NOT NULL,
  "birth_date" date
);

CREATE TABLE "movie_role" (
  "movie_id" int NOT NULL,
  "actor_id" int NOT NULL,
  "role_name" varchar(150) NOT NULL,
  PRIMARY KEY ("movie_id", "actor_id", "role_name")
);

CREATE TABLE "contract" (
  "movie_id" int NOT NULL,
  "actor_id" int NOT NULL,
  "studio_id" int NOT NULL,
  "fee_amount" numeric(14,2) NOT NULL,
  "currency" currency NOT NULL DEFAULT 'USD',
  "signed_on" date NOT NULL,
  PRIMARY KEY ("movie_id", "actor_id")
);

CREATE TABLE "marriage" (
  "id" INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "spouse1_id" int NOT NULL,
  "spouse2_id" int NOT NULL,
  "married_on" date NOT NULL,
  "divorced_on" date
);

CREATE TABLE "actor_parent" (
  "child_actor_id" int NOT NULL,
  "parent_actor_id" int NOT NULL,
  "relation" parent_relation NOT NULL,
  PRIMARY KEY ("child_actor_id", "parent_actor_id")
);

CREATE UNIQUE INDEX ON "movie" ("title", "release_year");

CREATE INDEX ON "movie" ("owner_studio_id");

CREATE INDEX ON "movie_coproducer" ("studio_id");

CREATE INDEX ON "actor" ("full_name");

CREATE INDEX ON "movie_role" ("actor_id");

CREATE INDEX ON "contract" ("studio_id");

CREATE INDEX ON "marriage" ("spouse1_id");

CREATE INDEX ON "marriage" ("spouse2_id");

CREATE UNIQUE INDEX ON "marriage" ("spouse1_id", "spouse2_id");

CREATE INDEX ON "actor_parent" ("parent_actor_id");

COMMENT ON TABLE "studio" IS 'Кіностудія. Президент — окрема сутність (1:1).';

COMMENT ON TABLE "president" IS 'Президент керує рівно однією студією.';

COMMENT ON TABLE "studio_unit" IS 'Слабка сутність підрозділу студії: ідентифікується парою (studio_id, unit_name).';

COMMENT ON TABLE "movie" IS 'Стрічка має ОДНУ студію-власника.';

COMMENT ON TABLE "animation_movie" IS 'Мультфільм: computer / drawn / puppet.';

COMMENT ON TABLE "feature_movie" IS 'Художній фільм як підклас; актори задаються через movie_role.';

COMMENT ON TABLE "documentary_movie" IS 'Документальний фільм із тематикою.';

COMMENT ON TABLE "movie_coproducer" IS 'Студії, що брали участь у виробництві, ОКРІМ власника.';

COMMENT ON TABLE "actor" IS 'Актор із імʼям, віком і статтю.';

COMMENT ON TABLE "movie_role" IS 'Амплуа актора у конкретному фільмі (M:N з атрибутом).';

COMMENT ON TABLE "contract" IS 'Контракт актора зі студією щодо конкретного фільму (тернарний зв’язок). Бізнес-правило: studio_id = movie.owner_studio_id.';

COMMENT ON TABLE "marriage" IS 'Шлюб між двома акторами (self-relationship). Заборонено spouse1_id = spouse2_id (перевіряється логікою/тригером).';

COMMENT ON TABLE "actor_parent" IS 'Династії: батько/мати — актор (self-relationship). Заборонено child = parent.';

ALTER TABLE "president" ADD FOREIGN KEY ("studio_id") REFERENCES "studio" ("id");

ALTER TABLE "studio_unit" ADD FOREIGN KEY ("studio_id") REFERENCES "studio" ("id");

ALTER TABLE "movie" ADD FOREIGN KEY ("owner_studio_id") REFERENCES "studio" ("id");

ALTER TABLE "movie" ADD FOREIGN KEY ("id") REFERENCES "animation_movie" ("movie_id");

ALTER TABLE "movie" ADD FOREIGN KEY ("id") REFERENCES "feature_movie" ("movie_id");

ALTER TABLE "movie" ADD FOREIGN KEY ("id") REFERENCES "documentary_movie" ("movie_id");

ALTER TABLE "movie_coproducer" ADD FOREIGN KEY ("movie_id") REFERENCES "movie" ("id");

ALTER TABLE "movie_coproducer" ADD FOREIGN KEY ("studio_id") REFERENCES "studio" ("id");

ALTER TABLE "movie_role" ADD FOREIGN KEY ("movie_id") REFERENCES "movie" ("id");

ALTER TABLE "movie_role" ADD FOREIGN KEY ("actor_id") REFERENCES "actor" ("id");

ALTER TABLE "contract" ADD FOREIGN KEY ("movie_id") REFERENCES "movie" ("id");

ALTER TABLE "contract" ADD FOREIGN KEY ("actor_id") REFERENCES "actor" ("id");

ALTER TABLE "contract" ADD FOREIGN KEY ("studio_id") REFERENCES "studio" ("id");

ALTER TABLE "marriage" ADD FOREIGN KEY ("spouse1_id") REFERENCES "actor" ("id");

ALTER TABLE "marriage" ADD FOREIGN KEY ("spouse2_id") REFERENCES "actor" ("id");

ALTER TABLE "actor_parent" ADD FOREIGN KEY ("child_actor_id") REFERENCES "actor" ("id");

ALTER TABLE "actor_parent" ADD FOREIGN KEY ("parent_actor_id") REFERENCES "actor" ("id");
